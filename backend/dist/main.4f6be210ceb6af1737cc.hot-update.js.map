{"version":3,"sources":["webpack:///./src/main.js"],"names":["createServer","httpShutdown","extend","app","express","router","Router","setUp","server","http","withShutdown","v1","process","on","exitHandler","onError","error","syscall","addr","address","bind","port","code","console","log","exit","onListening","shutdown","listen"],"mappings":";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,YAAf,GAA8B;AAC1B;AACAC,sDAAY,CAACC,MAAb,GAF0B,CAI1B;;AACA,QAAMC,GAAG,GAAGC,8CAAO,EAAnB;AAEA,QAAMC,MAAM,GAAGC,sDAAM,EAArB,CAP0B,CAQ1B;;AACAC,sDAAK,CAACJ,GAAD,EAAME,MAAN,CAAL,CAT0B,CAU1B;;AACA,QAAMG,MAAM,GAAGC,2CAAI,CAACT,YAAL,GAAoBU,YAApB,EAAf,CAX0B,CAY1B;;AACAC,yDAAE,CAACN,MAAD,CAAF;AAEA;;;;AAGAO,SAAO,CAACC,EAAR,CAAW,SAAX,EAAsB,MAAMC,WAAW,EAAvC;AACAF,SAAO,CAACC,EAAR,CAAW,QAAX,EAAqB,MAAMC,WAAW,EAAtC;AACAF,SAAO,CAACC,EAAR,CAAW,MAAX,EAAmB,MAAMC,WAAW,EAApC;AAEA;;;;AAGA,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAIA,KAAK,CAACC,OAAN,KAAkB,QAAtB,EAAgC;AAC5B,YAAMD,KAAN;AACH;;AAED,UAAME,IAAI,GAAGV,MAAM,CAACW,OAAP,EAAb;AACA,UAAMC,IAAI,GAAG,OAAOF,IAAP,KAAgB,QAAhB,GAA2B,UAAUA,IAArC,GAA6CA,IAAI,GAAG,UAAUA,IAAI,CAACG,IAAlB,GAAyB,MAAvF,CANoB,CAQpB;;AACA,YAAQL,KAAK,CAACM,IAAd;AACI,WAAK,QAAL;AACIC,eAAO,CAACC,GAAR,CAAa,GAAEJ,IAAK,+BAApB;AACAR,eAAO,CAACa,IAAR,CAAa,CAAb;AACA;;AAEJ,WAAK,YAAL;AACIF,eAAO,CAACC,GAAR,CAAa,GAAEJ,IAAK,oBAApB;AACAR,eAAO,CAACa,IAAR,CAAa,CAAb;AACA;;AAEJ;AACI,cAAMT,KAAN;AAZR;AAcH;AAED;;;;;AAGA,WAASU,WAAT,GAAuB;AACnB,UAAMR,IAAI,GAAGV,MAAM,CAACW,OAAP,EAAb;AACA,UAAMC,IAAI,GAAG,OAAOF,IAAP,KAAgB,QAAhB,GAA2B,UAAUA,IAArC,GAA4C,UAAUA,IAAI,CAACG,IAAxE;AACAE,WAAO,CAACC,GAAR,CAAa,gBAAeJ,IAAK,EAAjC;AACH;;AAED,WAASN,WAAT,GAAuB;AACnBS,WAAO,CAACC,GAAR,CAAa,8BAAb;AACAhB,UAAM,CAACmB,QAAP,CAAgB,MAAMf,OAAO,CAACa,IAAR,CAAa,CAAb,CAAtB;AACH;;AAEDjB,QAAM,CAACK,EAAP,CAAU,SAAV,EAAqBV,GAArB;AACAK,QAAM,CAACK,EAAP,CAAU,OAAV,EAAmBE,OAAnB;AACAP,QAAM,CAACK,EAAP,CAAU,WAAV,EAAuBa,WAAvB;AAEAlB,QAAM,CAACoB,MAAP,CAAc,IAAd,EAAoB,WAApB;AACH;;AAEc5B,2EAAf,E","file":"main.4f6be210ceb6af1737cc.hot-update.js","sourcesContent":["import express, { Router } from 'express';\nimport httpShutdown from 'http-shutdown';\nimport http from 'http';\nimport setUp from './app';\nimport v1 from './api/v1';\n\nasync function createServer() {\n    // .extend adds a .withShutdown prototype method to the Server object\n    httpShutdown.extend();\n\n    // Init Express\n    const app = express();\n\n    const router = Router();\n    // Setup Express app\n    setUp(app, router);\n    // Create HTTP server\n    const server = http.createServer().withShutdown();\n    // Install API\n    v1(router);\n\n    /**\n     * Setup exit handlers\n     */\n    process.on('SIGTERM', () => exitHandler());\n    process.on('SIGINT', () => exitHandler());\n    process.on('exit', () => exitHandler());\n\n    /**\n     * Event listener for HTTP server \"error\" event.\n     */\n    function onError(error) {\n        if (error.syscall !== 'listen') {\n            throw error;\n        }\n\n        const addr = server.address();\n        const bind = typeof addr === 'string' ? 'Pipe ' + addr : (addr ? 'Port ' + addr.port : 'null');\n\n        // handle specific listen errors with friendly messages\n        switch (error.code) {\n            case 'EACCES':\n                console.log(`${bind} requires elevated privileges`);\n                process.exit(1);\n                break;\n\n            case 'EADDRINUSE':\n                console.log(`${bind} is already in use`);\n                process.exit(1);\n                break;\n\n            default:\n                throw error;\n        }\n    }\n\n    /**\n     * Event listener for HTTP server \"listening\" event.\n     */\n    function onListening() {\n        const addr = server.address();\n        const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;\n        console.log(`Listening on ${bind}`);\n    }\n\n    function exitHandler() {\n        console.log(`Shutting down HTTP server...`);\n        server.shutdown(() => process.exit(7));\n    }\n\n    server.on('request', app);\n    server.on('error', onError);\n    server.on('listening', onListening);\n\n    server.listen(8000, '127.0.0.1');\n}\n\nexport default createServer;\n"],"sourceRoot":""}